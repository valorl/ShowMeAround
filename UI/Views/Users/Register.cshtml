@model UI.Models.Registration


@{
    ViewBag.Title = "Registration";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="container-forms">
@using (Html.BeginForm("Register", "Users", FormMethod.Post, new { @class = "form-signin" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        @*<div class="container-forms">

                <form class="form-signin"></form>
            </div>*@

        @*<div class="container-forms">*@
        @Html.AntiForgeryToken()
        @if (ViewBag.Message != null)
                {
            <div style="border:solid 1px green">
                @ViewBag.Message
            </div>
        }
        <form class="form-signin">
            <h2 class="form-signin-heading">Register</h2>

            @Html.TextBoxFor(model => model.User.FirstName, new { @class = "form-control", @placeholder = "First Name" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.User.FirstName)</p>

            @Html.TextBoxFor(model => model.User.LastName, new { @class = "form-control", @placeholder = "Last Name" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.User.LastName)</p>

            @Html.TextBoxFor(model => model.User.Email, new { @class = "form-control", @placeholder = "Email" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.User.Email)</p>

            @Html.TextBoxFor(model => model.User.PwdHash, new { @class = "form-control", @placeholder = "Password", type = "password" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.User.PwdHash)</p>

            @Html.TextBoxFor(model => model.User.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password", type = "password" })
            <p class="help-block">@Html.ValidationMessageFor(model => model.User.ConfirmPassword)</p>

            @Html.EditorFor(model => model.User.BirthDate, new { htmlAttributes = new { @class = "form-control datepicker", id = "datepicker", @placeholder = "BirthDate", type = "date" } })
            <p class="help-block">@Html.ValidationMessageFor(model => model.User.BirthDate)</p>

            <p>
                @Html.DropDownListFor(model => model.Languages, ViewBag.LanguageList as IEnumerable<SelectListItem>, new { @class = "form-control form-control-languages", id = "languageList" })
                <input type="button" name="Add Language" value="Add" id="Button1" class="btn btn-list" />
            </p>
            @Html.TextBoxFor(model => model.User.Languages, "languageSelected", new { @class = "form-control", id = "languageSelected" })<br />


            @Html.LabelFor(model => model.Interest, new { @class = "control-label" })
            <div class="form-control">

                @foreach (var item in ViewBag.InterestList as IEnumerable<SelectListItem>)
                {
                    <label class="checkbox-inline no_indent col-md-10" for="InterestList@item.Value">
                        <input type="checkbox"
                               name="InterestList[@item.Value]"
                               class="measure-control" unchecked />
                        @item.Value
                    </label>
                }
            </div>

            <button class="btn btn-lg btn-primary btn-block btn-success" type="submit">Register</button>
        </form>
        @*</div>*@
    </fieldset>
}
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
